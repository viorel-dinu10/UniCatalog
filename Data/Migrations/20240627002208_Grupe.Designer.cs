// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniCatalog.Data.Data;

#nullable disable

namespace UniCatalog.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240627002208_Grupe")]
    partial class Grupe
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("UniCatalog.Models.Grupa", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Grupa");

                    b.HasData(
                        new
                        {
                            Name = "4lf421"
                        });
                });

            modelBuilder.Entity("UniCatalog.Models.Student", b =>
                {
                    b.Property<string>("NrMatricol")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CNP")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("CicluDeInvatamant")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInscrierii")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrupaName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("MedieAdmitere")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NrMatricol");

                    b.HasIndex("GrupaName");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            NrMatricol = "10917/4lf422019",
                            CNP = "5030610211245",
                            CicluDeInvatamant = 0,
                            DataInscrierii = new DateTime(2024, 6, 27, 3, 22, 8, 44, DateTimeKind.Local).AddTicks(1972),
                            MedieAdmitere = 7.5,
                            Name = "Snow",
                            Prenume = "Jon"
                        },
                        new
                        {
                            NrMatricol = "10918/4lf422019",
                            CNP = "5040710211234",
                            CicluDeInvatamant = 0,
                            DataInscrierii = new DateTime(2024, 6, 27, 3, 22, 8, 44, DateTimeKind.Local).AddTicks(2044),
                            MedieAdmitere = 8.0999999999999996,
                            Name = "Stark",
                            Prenume = "Arya"
                        },
                        new
                        {
                            NrMatricol = "10919/4lf422019",
                            CNP = "5030810211256",
                            CicluDeInvatamant = 0,
                            DataInscrierii = new DateTime(2024, 6, 27, 3, 22, 8, 44, DateTimeKind.Local).AddTicks(2047),
                            MedieAdmitere = 8.6999999999999993,
                            Name = "Lannister",
                            Prenume = "Tyrion"
                        },
                        new
                        {
                            NrMatricol = "10920/4lf422019",
                            CNP = "5030910211267",
                            CicluDeInvatamant = 0,
                            DataInscrierii = new DateTime(2024, 6, 27, 3, 22, 8, 44, DateTimeKind.Local).AddTicks(2049),
                            MedieAdmitere = 9.0,
                            Name = "Targaryen",
                            Prenume = "Daenerys"
                        },
                        new
                        {
                            NrMatricol = "10921/4lf422019",
                            CNP = "5031010211278",
                            CicluDeInvatamant = 0,
                            DataInscrierii = new DateTime(2024, 6, 27, 3, 22, 8, 44, DateTimeKind.Local).AddTicks(2052),
                            MedieAdmitere = 7.7999999999999998,
                            Name = "Baratheon",
                            Prenume = "Robert"
                        },
                        new
                        {
                            NrMatricol = "10922/4lf422019",
                            CNP = "5031110211289",
                            CicluDeInvatamant = 0,
                            DataInscrierii = new DateTime(2024, 6, 27, 3, 22, 8, 44, DateTimeKind.Local).AddTicks(2056),
                            MedieAdmitere = 7.2999999999999998,
                            Name = "Greyjoy",
                            Prenume = "Theon"
                        },
                        new
                        {
                            NrMatricol = "10923/4lf422019",
                            CNP = "5031210211290",
                            CicluDeInvatamant = 0,
                            DataInscrierii = new DateTime(2024, 6, 27, 3, 22, 8, 44, DateTimeKind.Local).AddTicks(2058),
                            MedieAdmitere = 8.5,
                            Name = "Mormont",
                            Prenume = "Jorah"
                        },
                        new
                        {
                            NrMatricol = "10924/4lf422019",
                            CNP = "5031310211301",
                            CicluDeInvatamant = 0,
                            DataInscrierii = new DateTime(2024, 6, 27, 3, 22, 8, 44, DateTimeKind.Local).AddTicks(2061),
                            MedieAdmitere = 8.9000000000000004,
                            Name = "Tyrell",
                            Prenume = "Margaery"
                        },
                        new
                        {
                            NrMatricol = "10925/4lf422019",
                            CNP = "5031410211312",
                            CicluDeInvatamant = 0,
                            DataInscrierii = new DateTime(2024, 6, 27, 3, 22, 8, 44, DateTimeKind.Local).AddTicks(2063),
                            MedieAdmitere = 8.1999999999999993,
                            Name = "Sand",
                            Prenume = "Oberyn"
                        },
                        new
                        {
                            NrMatricol = "10926/4lf422019",
                            CNP = "5031510211323",
                            CicluDeInvatamant = 0,
                            DataInscrierii = new DateTime(2024, 6, 27, 3, 22, 8, 44, DateTimeKind.Local).AddTicks(2068),
                            MedieAdmitere = 8.3000000000000007,
                            Name = "Martell",
                            Prenume = "Ellaria"
                        },
                        new
                        {
                            NrMatricol = "10927/4lf422019",
                            CNP = "5031610211334",
                            CicluDeInvatamant = 0,
                            DataInscrierii = new DateTime(2024, 6, 27, 3, 22, 8, 44, DateTimeKind.Local).AddTicks(2070),
                            MedieAdmitere = 7.9000000000000004,
                            Name = "Tarly",
                            Prenume = "Samwell"
                        },
                        new
                        {
                            NrMatricol = "10928/4lf422019",
                            CNP = "5031710211345",
                            CicluDeInvatamant = 0,
                            DataInscrierii = new DateTime(2024, 6, 27, 3, 22, 8, 44, DateTimeKind.Local).AddTicks(2073),
                            MedieAdmitere = 7.2000000000000002,
                            Name = "Bolton",
                            Prenume = "Ramsay"
                        },
                        new
                        {
                            NrMatricol = "10929/4lf422019",
                            CNP = "5031810211356",
                            CicluDeInvatamant = 0,
                            DataInscrierii = new DateTime(2024, 6, 27, 3, 22, 8, 44, DateTimeKind.Local).AddTicks(2075),
                            MedieAdmitere = 8.4000000000000004,
                            Name = "Baelish",
                            Prenume = "Petyr"
                        },
                        new
                        {
                            NrMatricol = "10930/4lf422019",
                            CNP = "5031910211367",
                            CicluDeInvatamant = 0,
                            DataInscrierii = new DateTime(2024, 6, 27, 3, 22, 8, 44, DateTimeKind.Local).AddTicks(2077),
                            MedieAdmitere = 8.0,
                            Name = "Clegane",
                            Prenume = "Sandor"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniCatalog.Models.Student", b =>
                {
                    b.HasOne("UniCatalog.Models.Grupa", "Grupa")
                        .WithMany("Student")
                        .HasForeignKey("GrupaName");

                    b.Navigation("Grupa");
                });

            modelBuilder.Entity("UniCatalog.Models.Grupa", b =>
                {
                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
